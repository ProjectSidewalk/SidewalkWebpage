# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
# TODO set this on prod.
play.http.secret.key="sf]P>5x<=XYOVZrkeLNJRpPcpJ?xhRE?8@Gk;H=gcnTy6DWtfNdr_8lk9x_v33Ay"
play.http.secret.key=${?SIDEWALK_APPLICATION_SECRET}

# The application languages
# ~~~~~
play.i18n.langs = [ "en", "es", "nl", "zh-TW", "de", "en-US", "en-NZ" ]

# Asset configuration.
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`

# Default database configuration
slick.dbs.default.profile="models.utils.MyPostgresProfile$"
slick.dbs.default.db.driver = "org.postgresql.Driver"
slick.dbs.default.db.url="jdbc:postgresql://db:5432/sidewalk"

slick.dbs.default.db.user="sidewalk"
slick.dbs.default.db.password="sidewalk"

# TODO test that the connections are acting the way we want on the server.
# NOTE: default connection pool changed form BoneCP to HikariCP in Play 2.4. This changed the config names.
db.prototype.hikaricp.idleTimeout=2 minutes # default is 10 minutes
//db.default.acquireRetryDelay=5 second  # default is 1 second -- don't see an equivalent for HikariCP.
//db.default.acquireRetryAttempts=42  # default is 10 -- don't see an equivalent for HikariCP.
//db.default.minConnectionsPerPartition=4  # default is 5 -- default seems to be 0 in HikariCP? minimumIdle = null

# Override default url if environment variable is present.
slick.dbs.default.db.url=${?DATABASE_URL}
slick.dbs.default.db.user=${?DATABASE_USER}
slick.dbs.default.db.password=${?DATABASE_PASSWORD}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# Adding gzip compression.
# TODO test gzip with Play 2.4+.
# TODO play.filters.gzip.compressionLevel exists starting in Play 2.7
# https://www.playframework.com/documentation/2.6.x/Migration26#Default-Filters
play.filters.gzip {
  contentType {
    # If non empty, then a response will only be compressed if its content type is in this list.
    #whiteList = [ "text/*", "application/javascript", "application/json" ]

    # The black list is only used if the white list is empty.
    # Compress all responses except the ones whose content type is in this list.
    #blackList = []
  }
}
play.filters.enabled += "play.filters.gzip.GzipFilter"

# TODO Configure security headers for real (play.filters.headers.contentSecurityPolicy).
# TODO This was then replaced by CSPFilter in Play 2.7. https://www.playframework.com/documentation/2.7.x/Migration27#play.filters.headers.contentSecurityPolicy-deprecated-for-CSPFilter
play.filters.headers.contentSecurityPolicy = null

# TODO configure allowed hosts for real. Might need to list each city individually.
# TODO make sure that this works with clustering.
play.filters.hosts {
  allowed = ["localhost:9000"]
}

# Evolutions configuration. To apply them globally, use play.evolutions instead of play.evolutions.db.default.
# But we only have one db, so that doesn't matter for our purposes.
play.evolutions.db.default.enabled=true
play.evolutions.db.default.autocommit=false
play.evolutions.db.default.autoApply=true
play.evolutions.db.default.autoApplyDowns=false

# TODO we had this in Play 2.3 but the sentence about this was removed in the Play 2.4 docs... Not sure we ever actually needed/used it though.
# https://www.playframework.com/documentation/2.3.x/HTTPServer
# https://www.playframework.com/documentation/2.4.x/HTTPServer
//trustxforwarded=true

# TODO update logger configs for Play 2.4. https://www.playframework.com/documentation/2.4.x/SettingsLogger maybe?
# Logger configuration: https://www.playframework.com/documentation/2.4.x/SettingsLogger.
# ~~~~~
#play.logger.includeConfigProperties=true -- doesn't work until Play 2.6.

play.application.loader = "CustomApplicationLoader"
play.modules.enabled += "modules.CustomControllerModule"
play.modules.enabled += "modules.ActorModule"
akka {
  actor {
    # TODO do we use this?
    slick-context = {
      fork-join-executor {
        parallelism-min = 300
        parallelism-max = 300
      }
    },
    # Default for Play 2.4 below, with Akka's defaults in comments.
    # https://www.playframework.com/documentation/2.4.x/Migration24#Thread-pool-configuration
    # Removing these bc: https://www.playframework.com/documentation/2.8.x/Migration28#Dropped-the-overrides-for-akka.actor.default-dispatcher.fork-join-executor
//    default-dispatcher = {
//      fork-join-executor {
//        parallelism-factor = 1.0 # 3.0
//        parallelism-max = 24 # 64
//        task-peeking-mode = LIFO # FIFO
//      }
//    }
  }
}

# Environment type: test or prod.
environment-type = "test"
environment-type = ${?ENV_TYPE}

# Mapbox API.
mapbox-api-key = ${?MAPBOX_API_KEY}

# Google Maps API.
google-maps-api-key = ${?GOOGLE_MAPS_API_KEY}
google-maps-secret = ${?GOOGLE_MAPS_SECRET}

# SciStarter API.
scistarter-api-key = ${?SCISTARTER_API_KEY}

internal-api-key = ${?INTERNAL_API_KEY}

# TODO has this changed in Play 2.4?
smtp.host="localhost"
smtp.port=25
smtp.tls=false
noreply-email-address="noreply@cs.washington.edu"

# For the ability to save crops on the server.
# TODO haven't tested in Play 2.4.
//play.http.parser.maxDiskBuffer = 100MB
//parsers.anyContent.maxLength = 100MB
//parsers.text.maxLength = 100MB
//play.http.parser.maxMemoryBuffer = 100MB

# banner link
custom.news.ribbon.link = null

# Directory to store cropped images.
cropped.image.directory = "/home/.crops"
cropped.image.directory = ${?SIDEWALK_IMAGES_DIR}

# Authentication cookie settings. Updated to share across subdomains (i.e., across cities).
# TODO test this on the server. Authentication should be handled by Silhouette, but idk about language cookie.
# TODO Below are actually the defaults as of Play 2.6. Probably only need to edit the domain config.
//play.http.session.secure=false
//play.http.session.httpOnly=true
//play.http.session.domain=null

include "silhouette.conf"
include "cityparams.conf"
