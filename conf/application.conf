# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="sf]P>5x<=XYOVZrkeLNJRpPcpJ?xhRE?8@Gk;H=gcnTy6DWtfNdr_8lk9x_v33Ay"
application.secret=${?SIDEWALK_APPLICATION_SECRET}

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=app.Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configurationDATA
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost:5432/sidewalk"
# db.default.user=sa
db.default.user="sidewalk"
db.default.password="sidewalk"


#override default url if environment variable is present
db.default.url=${?DATABASE_URL}
db.default.user=${?DATABASE_USER}
db.default.password=${?DATABASE_PASSWORD}

# Slick Evolutions
# ~~~~~
slick.default="models.*"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=enabled

play.evolutions.autoApplyDown=true

play.filters.gzip {

  contentType {

    # If non empty, then a response will only be compressed if its content type is in this list.
    #whiteList = [ "text/*", "application/javascript", "application/json" ]

    # The black list is only used if the white list is empty.
    # Compress all responses except the ones whose content type is in this list.
    #blackList = []
  }
}

play.filters.enabled += "play.filters.gzip.GzipFilter"

applyEvolutions.default=true

# Transactional DDL - causes all statements to be executed in one transaction only
evolutions.autocommit=false


# https://www.playframework.com/documentation/2.3.x/HTTPServer
trustxforwarded=true

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=DEBUG

# Logger provided to your application:
logger.application=DEBUG
#logger.application=INFO

play {
  akka {
    actor {
      slick-context = {
        fork-join-executor {
          parallelism-min = 300
          parallelism-max = 300
        }
      },
      default-dispatcher = {
        fork-join-executor {
          parallelism-factor = 1.0
          parallelism-max = 24
        }
      }
    }
  }
}

geotrellis.catalog = "app/assets/catalog.json"

include "silhouette.conf"
include "cityparams.conf"
