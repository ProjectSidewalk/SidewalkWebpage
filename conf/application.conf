# This is the main configuration file for the application.

# The secret key is used to secure cryptographics functions.
# This must be changed for production, but we recommend not changing it in this file.
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
# TODO set this on prod.
play.http.secret.key="sf]P>5x<=XYOVZrkeLNJRpPcpJ?xhRE?8@Gk;H=gcnTy6DWtfNdr_8lk9x_v33Ay"
play.http.secret.key=${?SIDEWALK_APPLICATION_SECRET}

# The application languages.
# ~~~~~
play.i18n.langs = [ "en", "es", "nl", "zh-TW", "de", "en-US", "en-NZ" ]
play.i18n.defaultLang = "en"
play.i18n.langCookieName = "PROD_PLAY_LANG"

# Asset configuration.
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Prevent timing out on long-running API requests. Fixes https://github.com/ProjectSidewalk/SidewalkWebpage/issues/3544.
play.server.http.idleTimeout = 5 minutes # Default is 75 seconds.

# Allow larger request headers to account for large cookies from numerous cities.
# Fixes https://github.com/ProjectSidewalk/SidewalkWebpage/issues/3381.
play.server.max-header-size = 32k # Default is 8k.

# Default database configuration.
slick.dbs.default.profile="models.utils.MyPostgresProfile$"
slick.dbs.default.db.driver = "org.postgresql.Driver"
slick.dbs.default.db.url="jdbc:postgresql://db:5432/sidewalk"

slick.dbs.default.db.user="sidewalk"
slick.dbs.default.db.password="sidewalk"

# NOTE numThreads must be set to the same number as maxConnections. These are used when we call db.stream().
# https://www.playframework.com/documentation/3.0.x/PlaySlickAdvancedTopics#Thread-Pool
slick.dbs.default.db.numThreads = 25          # Default is 20
slick.dbs.default.db.maxConnections = 25      # Default is 20
slick.dbs.default.db.minConnections = 2
#slick.dbs.default.db.queueSize = 1000        # Default is 1000
slick.dbs.default.db.connectionTimeout = 30s
slick.dbs.default.db.idleTimeout = 2 minutes  # Close unused connections
slick.dbs.default.db.maxLifetime = 30 minutes

# TODO I saw play.db.prototype.hikaricp instead of db.prototype.hikaricp in on example, and Claude suggested that I
#     should be using `slick.dbs.default.db` instead... which one is correct? Keeping all just in case.
db.prototype.hikaricp.idleTimeout=2 minutes # default is 10 minutes
play.db.prototype.hikaricp.idleTimeout=2 minutes # default is 10 minutes

# Override default url if environment variable is present.
slick.dbs.default.db.url=${?DATABASE_URL}
slick.dbs.default.db.user=${?DATABASE_USER}
slick.dbs.default.db.password=${?DATABASE_PASSWORD}

# Custom execution context for CPU-intensive operations like data conversion, image processing, etc. Used to prevent
# blocking the main thread pool when doing long-running operations. Slick manages it's own thread pool for the db.
# Some configs explained here: https://pekko.apache.org/docs/pekko/1.1/general/configuration-reference.html
cpu-intensive {
  executor = "fork-join-executor"
  throughput = 1 # Default is 5.
  fork-join-executor {
    parallelism-min = 2      # Default is 8. Using fewer long-running threads for CPU-intensive work.
    parallelism-factor = 1.0 # Default is 1.0.
    parallelism-max = 4      # Default is 64. Using fewer long-running threads for CPU-intensive work.
  }
}

# Sets the execution context that Materializer uses for running streams. We tend to use this for the CPU-intensive API.
pekko.stream.materializer.dispatcher = "cpu-intensive"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# Adding gzip compression.
# TODO test gzip with Play 2.4+.
# TODO play.filters.gzip.compressionLevel exists starting in Play 2.7
# https://www.playframework.com/documentation/2.6.x/Migration26#Default-Filters
play.filters.gzip {
  contentType {
    # If non empty, then a response will only be compressed if its content type is in this list.
    #whiteList = [ "text/*", "application/javascript", "application/json" ]

    # The black list is only used if the white list is empty.
    # Compress all responses except the ones whose content type is in this list.
    #blackList = []
  }
}
play.filters.enabled += "play.filters.gzip.GzipFilter"

# Set up Content Security Policy (CSP) filter.
# NOTE I've set this up to be very basic and to report the violations to the /cspReport endpoint. We aren't actually
# enforcing the CSP yet. It's a sizeable task to set it up properly, but we can work towards it by watching the reports.
# https://www.playframework.com/documentation/3.0.x/CspFilter#Configuring-CSP.
play.filters.enabled += play.filters.csp.CSPFilter
play.filters.csp {
  reportOnly = true
  directives = {
    # Uncomment below when we want the reports sent to our logger. There are too many now for it to be worthwhile.
#    report-uri = "/cspReport"
    default-src = "'self'"
    script-src = "'self' 'unsafe-inline' 'unsafe-eval'"
    style-src = "'self' 'unsafe-inline'"
    img-src = "'self' data:"
    font-src = "'self'"
  }
}

play.filters.hosts.allowed = ["localhost", ".cs.washington.edu"]

# Evolutions configuration. To apply them globally, use play.evolutions instead of play.evolutions.db.default.
# But we only have one db, so that doesn't matter for our purposes.
# https://www.playframework.com/documentation/3.0.x/Evolutions#Evolutions-configuration
play.evolutions.db.default.enabled=true
play.evolutions.db.default.autocommit=false
play.evolutions.db.default.autoApply=true
play.evolutions.db.default.autoApplyDowns=true

# TODO we had this in Play 2.3 but the sentence about this was removed in the Play 2.4 docs... Not sure we ever actually needed/used it though.
# https://www.playframework.com/documentation/2.3.x/HTTPServer
# https://www.playframework.com/documentation/2.4.x/HTTPServer
//trustxforwarded=true

# TODO update logger configs for Play 2.4. https://www.playframework.com/documentation/2.4.x/SettingsLogger maybe?
# Logger configuration: https://www.playframework.com/documentation/2.4.x/SettingsLogger.
# ~~~~~
#play.logger.includeConfigProperties=true -- doesn't work until Play 2.6.

play.application.loader = "CustomApplicationLoader"
play.modules.enabled += "modules.CustomControllerModule"
play.modules.enabled += "modules.ActorModule"
play.modules.enabled += "modules.ExecutorsModule"

# Environment type: local, test, or prod.
environment-type = "local"
environment-type = ${?ENV_TYPE}

# Mapbox API.
mapbox-api-key = ${?MAPBOX_API_KEY}

# Google Maps API.
google-maps-api-key = ${?GOOGLE_MAPS_API_KEY}
google-maps-secret = ${?GOOGLE_MAPS_SECRET}

# SciStarter API.
scistarter-api-key = ${?SCISTARTER_API_KEY}

internal-api-key = ${?INTERNAL_API_KEY}

# Used for sending emails with play-mailer.
play.mailer.host="localhost"
noreply-email-address="noreply@cs.washington.edu"

# For the ability to save crops on the server.
play.http.parser.maxMemoryBuffer = 100M
play.http.parser.maxDiskBuffer = 100M

# banner link
custom.news.ribbon.link = null

# Directory to store cropped images.
cropped.image.directory = "/home/.crops"
cropped.image.directory = ${?SIDEWALK_IMAGES_DIR}

# Custom error handler.
play.http.errorHandler = "modules.CustomErrorHandler"

# Authentication cookie settings. Updated to share across subdomains (i.e., across cities).
play.http.session {
  cookieName = "PROD_PLAY_SESSION"
  domain = ".cs.washington.edu"
  secure = true
  httpOnly = true
  sameSite = "lax"
}

include "silhouette.conf"
include "cityparams.conf"
