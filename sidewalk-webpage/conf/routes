# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                               @controllers.ApplicationController.index
GET     /about                          @controllers.ApplicationController.about
GET     /map                            @controllers.ApplicationController.map

# User authentication
GET     /signIn                         @controllers.UserController.signIn(url: String ?= "/")
GET     /signUp                         @controllers.UserController.signUp(url: String ?= "/")
GET     /signOut                        @controllers.UserController.signOut(url: String ?="/")
POST    /authenticate/credentials       @controllers.CredentialsAuthController.authenticate(url: String ?= "/")
POST    /signUp                         @controllers.SignUpController.signUp(url: String ?= "/")

# Admin
GET     /admin                          @controllers.AdminController.index
GET     /admin/:username                @controllers.AdminController.userProfile(username: String)

# Auditing tasks
GET     /audit                          @controllers.AuditController.audit
GET     /audit/region/:id               @controllers.AuditController.auditRegion(id: Int)
GET     /audit/street/:id               @controllers.AuditController.auditStreet(id: Int)
POST    /audit/comment                  @controllers.AuditController.postComment
POST    /audit/nostreetview             @controllers.AuditController.postNoStreetView

# Task API.
GET     /task                           @controllers.TaskController.getTask
GET     /task/next                      @controllers.TaskController.getNextTask(streetEdgeId: Int, lat: Float, lng: Float)
GET     /task/nextInRegion              @controllers.TaskController.getTaskInRegion(regionId: Int)
GET     /task/street/:id                @controllers.TaskController.getTaskByStreetEdgeId(id: Int)
GET     /tasks                          @controllers.TaskController.getTasksInRegion(regionId: Int)
POST    /task                           @controllers.TaskController.post


# Missions
GET     /mission/all                    @controllers.MissionController.getAllMissions
GET     /mission/complete               @controllers.MissionController.getCompletedMissions
GET     /mission/complete/:regionId     @controllers.MissionController.getCompletedMissionsInRegion(regionId: Int)
GET     /mission/incomplete             @controllers.MissionController.getIncompleteMissions
GET     /mission/incomplete/:regionId   @controllers.MissionController.getIncompleteMissionsInRegion(regionId: Int)
POST    /mission                        @controllers.MissionController.post

# Map Edit
GET     /map/edit                       @controllers.MapController.edit

# User status
# /:username has to come last in the list. Otherwise it eats other urls.
GET     /contribution/streets           @controllers.UserProfileController.getAuditedStreets
GET     /contribution/streets/all       @controllers.UserProfileController.getAllAuditedStreets
GET     /contribution/labels            @controllers.UserProfileController.getSubmittedLabels
GET     /contribution/labels/all        @controllers.UserProfileController.getAllLabels
GET     /contribution/labelCounts/all   @controllers.UserProfileController.getAllLabelCounts
GET     /contribution/auditCounts       @controllers.UserProfileController.getAuditCounts
GET     /contribution/auditCounts/all   @controllers.UserProfileController.getAllAuditCounts
GET     /contribution/auditInteractions @controllers.UserProfileController.getAuditTaskInteractions
GET     /contribution/previousAudit     @controllers.UserProfileController.previousAudit
GET     /contribution/:username         @controllers.UserProfileController.userProfile(username: String)

# Geometry API
GET     /geometry/neighborhoods         controllers.RegionController.listNeighborhoods
GET     /geometry/streets               controllers.StreetController.getStreets(minLat: Double ?= 38.761, minLng: Double ?= -77.262, maxLat: Double ?= 38.928567, maxLng: Double ?= -76.830)
GET     /geometry/join/:limit           controllers.StreetController.join(limit: Int)
GET     /geometry/select                controllers.StreetController.select

GET     /api/sidewalks                  controllers.SidewalkController.listSidewalks
# POST    /sidewalks                    controllers.SidewalkController.createSidewalks
# PUT     /sidewalks                    controllers.SidewalkController.editSidewalks
# DELETE  /sidewalks/:id                controllers.SidewalkController.removeSidewalk(id: Int)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                   controllers.Assets.at(path="/public", file)
GET     /webjars/*file                  controllers.WebJarAssets.at(file)
