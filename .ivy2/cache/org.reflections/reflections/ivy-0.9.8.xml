<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="org.reflections"
		module="reflections"
		revision="0.9.8"
		status="release"
		publication="20120524122141"
	>
		<description homepage="http://code.google.com/p/reflections/">
		Reflections - a Java runtime metadata analysis
		</description>
		<m:maven.plugins>null__maven-resources-plugin__2.5|null__maven-source-plugin__2.1.2|null__maven-javadoc-plugin__2.8|null__maven-compiler-plugin__2.3.2|null__maven-surefire-plugin__2.12|null__maven-resources-plugin__2.5|null__maven-source-plugin__2.1.2|null__maven-javadoc-plugin__2.8|null__maven-compiler-plugin__2.3.2|null__maven-surefire-plugin__2.12</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="reflections" type="jar" ext="jar" conf="master"/>
	</publications>
	<dependencies>
		<dependency org="com.google.guava" name="guava" rev="11.0.2" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="javassist" name="javassist" rev="3.12.1.GA" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="org.slf4j" name="slf4j-api" rev="1.6.1" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="dom4j" name="dom4j" rev="1.6.1" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="com.google.code.gson" name="gson" rev="1.4" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="javax.servlet" name="servlet-api" rev="2.5" force="true" conf="optional->compile(*),provided(*),runtime(*),master(*)"/>
		<dependency org="org.slf4j" name="slf4j-simple" rev="1.6.1" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="junit" name="junit" rev="4.5" force="true" conf="test->runtime(*),master(*)"/>
	</dependencies>
</ivy-module>
