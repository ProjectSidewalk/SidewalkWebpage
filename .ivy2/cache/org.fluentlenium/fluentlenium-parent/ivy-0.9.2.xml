<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="org.fluentlenium"
		module="fluentlenium-parent"
		revision="0.9.2"
		status="release"
		publication="20140127061658"
	>
		<license name="Apache 2" url="http://www.apache.org/licenses/LICENSE-2.0.txt" />
		<description homepage="https://github.com/FluentLenium/FluentLenium">
		FluentLenium makes the writing of acceptance testing more easy and in a fluent way using the power of
    css selectors. Build upon Selenium WebDriver.
    goTo(&quot;http://mywebpage/&quot;);
    fill(&quot;#firstName&quot;).with(&quot;toto&quot;);
    click(&quot;#create-button&quot;);
		</description>
		<m:dependency.management__junit__junit__version>4.11</m:dependency.management__junit__junit__version>
		<m:dependency.management__org.easytesting__fest-assert__version>1.4</m:dependency.management__org.easytesting__fest-assert__version>
		<m:properties__project.reporting.outputEncoding>${project.build.sourceEncoding}</m:properties__project.reporting.outputEncoding>
		<m:dependency.management__org.eclipse.jetty__jetty-server__scope>test</m:dependency.management__org.eclipse.jetty__jetty-server__scope>
		<m:dependency.management__org.seleniumhq.selenium__selenium-java__version>2.39.0</m:dependency.management__org.seleniumhq.selenium__selenium-java__version>
		<m:dependency.management__org.eclipse.jetty__jetty-server__version>7.2.2.v20101205</m:dependency.management__org.eclipse.jetty__jetty-server__version>
		<m:dependency.management__org.mockito__mockito-core__scope>test</m:dependency.management__org.mockito__mockito-core__scope>
		<m:dependency.management__org.mockito__mockito-core__version>1.8.5</m:dependency.management__org.mockito__mockito-core__version>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__sonatypeOssDistMgmtSnapshotsUrl>https://oss.sonatype.org/content/repositories/snapshots/</m:properties__sonatypeOssDistMgmtSnapshotsUrl>
		<m:maven.plugins>org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-compiler-plugin__3.1|null__maven-failsafe-plugin__2.6|null__maven-surefire-plugin__2.8.1|org.mortbay.jetty__jetty-maven-plugin__7.2.2.v20101205|org.apache.maven.plugins__maven-release-plugin__2.1|null__maven-remote-resources-plugin__1.1|null__maven-assembly-plugin__2.2-beta-2|com.mycila.maven-license-plugin__maven-license-plugin__1.9.0</m:maven.plugins>
		<m:dependency.management__org.easytesting__fest-assert__scope>test</m:dependency.management__org.easytesting__fest-assert__scope>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
	</publications>
</ivy-module>
