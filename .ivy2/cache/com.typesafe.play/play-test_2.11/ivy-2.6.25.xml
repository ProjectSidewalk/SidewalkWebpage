<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven" xmlns:e="http://ant.apache.org/ivy/extra">
	<info organisation="com.typesafe.play"
		module="play-test_2.11"
		revision="2.6.25"
		status="release"
		publication="20191206205107"
		e:info.apiURL="https://www.playframework.com/documentation/2.6.25/api/scala/index.html"
	>
		<license name="Apache-2.0" url="http://www.apache.org/licenses/LICENSE-2.0.html" />
		<description homepage="https://playframework.com">
		Play-Test
		</description>
		<e:sbtTransformHash>d2e5ebc888aeed0a90ccb9ddb51ea99e918e1072</e:sbtTransformHash>
		<m:properties__info.apiURL>https://www.playframework.com/documentation/2.6.25/api/scala/index.html</m:properties__info.apiURL>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="play-test_2.11" type="jar" ext="jar" conf="master"/>
	</publications>
	<dependencies>
		<dependency org="org.scala-lang" name="scala-library" rev="2.11.12" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="com.typesafe.play" name="play-guice_2.11" rev="2.6.25" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="com.typesafe.play" name="play-akka-http-server_2.11" rev="2.6.25" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="junit" name="junit" rev="4.12" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="org.specs2" name="specs2-core_2.11" rev="3.8.9" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="org.specs2" name="specs2-junit_2.11" rev="3.8.9" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="org.specs2" name="specs2-mock_2.11" rev="3.8.9" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="ch.qos.logback" name="logback-classic" rev="1.2.3" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="com.novocode" name="junit-interface" rev="0.11" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="com.google.guava" name="guava" rev="23.6.1-jre" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="com.google.code.findbugs" name="jsr305" rev="3.0.2" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="org.fluentlenium" name="fluentlenium-core" rev="3.3.0" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)">
			<exclude org="org.jboss.netty" module="netty" name="*" type="*" ext="*" conf="" matcher="exact"/>
		</dependency>
		<dependency org="org.seleniumhq.selenium" name="htmlunit-driver" rev="2.27" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)">
			<exclude org="org.seleniumhq.selenium" module="selenium-api" name="*" type="*" ext="*" conf="" matcher="exact"/>
			<exclude org="org.seleniumhq.selenium" module="selenium-support" name="*" type="*" ext="*" conf="" matcher="exact"/>
		</dependency>
		<dependency org="org.seleniumhq.selenium" name="selenium-api" rev="3.5.3" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="org.seleniumhq.selenium" name="selenium-support" rev="3.5.3" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="org.seleniumhq.selenium" name="selenium-firefox-driver" rev="3.5.3" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="com.google.inject" name="guice" rev="4.1.0" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="com.google.inject.extensions" name="guice-assistedinject" rev="4.1.0" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="com.h2database" name="h2" rev="1.4.197" force="true" conf="test->runtime(*),master(compile)"/>
	</dependencies>
</ivy-module>
