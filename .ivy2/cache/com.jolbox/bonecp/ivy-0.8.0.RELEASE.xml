<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven" xmlns:e="http://ant.apache.org/ivy/extra">
	<info organisation="com.jolbox"
		module="bonecp"
		revision="0.8.0.RELEASE"
		status="release"
		publication="20131023114844"
	>
		<license name="Apache v2" url="http://www.apache.org/licenses/LICENSE-2.0.html" />
		<description homepage="">
		Lightweight connection pool.
		</description>
		<m:dependency.management__junit__junit__version>4.10</m:dependency.management__junit__junit__version>
		<m:properties__spring.version>3.2.4.RELEASE</m:properties__spring.version>
		<m:dependency.management__log4j__log4j__version>1.2.17</m:dependency.management__log4j__log4j__version>
		<m:dependency.management__org.powermock__powermock-api-easymock__scope>test</m:dependency.management__org.powermock__powermock-api-easymock__scope>
		<m:properties__maven.build.timestamp.format>yyyy-MM-dd HH:mm:ssZ</m:properties__maven.build.timestamp.format>
		<m:dependency.management__c3p0__c3p0__version>0.9.1.2</m:dependency.management__c3p0__c3p0__version>
		<m:properties__implementation.build>${maven.build.timestamp}</m:properties__implementation.build>
		<m:dependency.management__com.jolbox__bonecp__version>0.8.0.RELEASE</m:dependency.management__com.jolbox__bonecp__version>
		<m:dependency.management__com.jolbox__bonecp-jdk-compat__version>0.8.0.RELEASE</m:dependency.management__com.jolbox__bonecp-jdk-compat__version>
		<m:dependency.management__org.easymock__easymock__version>3.1</m:dependency.management__org.easymock__easymock__version>
		<m:dependency.management__org.powermock__powermock-module-junit4__scope>test</m:dependency.management__org.powermock__powermock-module-junit4__scope>
		<m:properties__maven.compiler.showDeprecation>true</m:properties__maven.compiler.showDeprecation>
		<m:dependency.management__org.powermock__powermock-module-junit4__version>1.5</m:dependency.management__org.powermock__powermock-module-junit4__version>
		<e:sbtTransformHash>098e7b9ff5cdd25a4ce69b8c19bfcb5f91cf3b24</e:sbtTransformHash>
		<m:properties__maven.compiler.target>1.5</m:properties__maven.compiler.target>
		<m:dependency.management__org.hibernate__hibernate-core__version>4.2.5.Final</m:dependency.management__org.hibernate__hibernate-core__version>
		<m:properties__guava.version>15.0</m:properties__guava.version>
		<m:dependency.management__commons-cli__commons-cli__version>1.2</m:dependency.management__commons-cli__commons-cli__version>
		<m:dependency.management__org.springframework__spring-jdbc__version>3.2.4.RELEASE</m:dependency.management__org.springframework__spring-jdbc__version>
		<m:dependency.management__org.slf4j__slf4j-api__version>1.7.2</m:dependency.management__org.slf4j__slf4j-api__version>
		<m:dependency.management__org.slf4j__slf4j-log4j12__version>1.7.2</m:dependency.management__org.slf4j__slf4j-log4j12__version>
		<m:maven.plugins>org.apache.maven.plugins__maven-site-plugin__2.0-beta-7|org.apache.maven.plugins__maven-surefire-plugin__2.12.4|com.mycila.maven-license-plugin__maven-license-plugin__1.9.0|org.apache.maven.plugins__maven-site-plugin__2.0-beta-7|org.apache.maven.plugins__maven-surefire-plugin__2.12.4|com.mycila.maven-license-plugin__maven-license-plugin__1.9.0|org.apache.felix__maven-bundle-plugin__null|org.apache.maven.plugins__maven-dependency-plugin__2.1|org.apache.maven.plugins__maven-assembly-plugin__null</m:maven.plugins>
		<m:properties__project.reporting.outputEncoding>${project.build.sourceEncoding}</m:properties__project.reporting.outputEncoding>
		<m:dependency.management__com.google.guava__guava__version>15.0</m:dependency.management__com.google.guava__guava__version>
		<m:properties__powermock.version>1.5</m:properties__powermock.version>
		<m:properties__hibernate.version>4.2.5.Final</m:properties__hibernate.version>
		<m:dependency.management__com.jolbox__bonecp-test-commons__version>0.8.0.RELEASE</m:dependency.management__com.jolbox__bonecp-test-commons__version>
		<m:dependency.management__com.thoughtworks.qdox__qdox__version>1.12</m:dependency.management__com.thoughtworks.qdox__qdox__version>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:dependency.management__com.jolbox__bonecp-jdk-compat__scope>test</m:dependency.management__com.jolbox__bonecp-jdk-compat__scope>
		<m:properties__maven.compiler.showWarnings>true</m:properties__maven.compiler.showWarnings>
		<m:properties__endorsed.dir>${project.build.directory}/endorsed</m:properties__endorsed.dir>
		<m:dependency.management__org.powermock__powermock-api-easymock__version>1.5</m:dependency.management__org.powermock__powermock-api-easymock__version>
		<m:properties__maven.compiler.source>1.5</m:properties__maven.compiler.source>
		<m:dependency.management__commons-dbcp__commons-dbcp__version>1.4</m:dependency.management__commons-dbcp__commons-dbcp__version>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="bonecp" type="bundle" ext="jar" conf="master"/>
	</publications>
	<dependencies>
		<dependency org="com.google.guava" name="guava" rev="15.0" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="postgresql" name="postgresql" rev="9.1-901-1.jdbc4" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="org.slf4j" name="slf4j-api" rev="1.7.2" force="true" conf="compile->compile(*),master(compile);runtime->runtime(*)"/>
		<dependency org="com.jolbox" name="bonecp-test-commons" rev="0.8.0.RELEASE" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="com.jolbox" name="bonecp-jdk-compat" rev="0.8.0.RELEASE" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="junit" name="junit" rev="4.10" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="com.thoughtworks.qdox" name="qdox" rev="1.12" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="org.mockito" name="mockito-all" rev="1.8.4" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="org.easymock" name="easymock" rev="3.1" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="org.slf4j" name="slf4j-log4j12" rev="1.7.2" force="true" conf="test->runtime(*),master(compile)"/>
	</dependencies>
</ivy-module>
